@page "/add-mod"
@using System.Net.Http.Json
@using ESOF.WebApp.DBLayer.Entities
@inject HttpClient Http
@inject IJSRuntime JS
@code {
    private Mod formData = new Mod();
    private string alertMessage = string.Empty;
    private string alertClass = string.Empty;
    private bool showMessageContainer = false;
    private Guid createdModId;
    private bool shouldRedirect = false;

    private async Task SubmitForm()
    {
        try
        {
            // Log form data to the server console
            Console.WriteLine(System.Text.Json.JsonSerializer.Serialize(formData));

            ModFormModel exampleMod = new ModFormModel
            {
                ModId = Guid.NewGuid(),
                Name = "formData.Name2254345",
                Game = "formData.Game",
                Description = "formData.Description",
                ReleaseDate = DateTime.UtcNow,
                Author = "formData.Author",
                Version = "2",
                DownloadLink = "formData.DownloadLink",
                DownloadCount = 0,
                Rating = 0
            };

            Console.WriteLine(System.Text.Json.JsonSerializer.Serialize(exampleMod));

            var response = await Http.PostAsJsonAsync("/mods", exampleMod);
            if (response.IsSuccessStatusCode)
            {
                createdModId = exampleMod.ModId;
                ShowMessage("Mod created successfully.", "alert-success");
                shouldRedirect = true;
            }
            else
            {
                var responseBody = await response.Content.ReadAsStringAsync();
                ShowMessage($"Error creating mod: {response.ReasonPhrase} - {responseBody}", "alert-danger");
            }
        }
        catch (Exception ex)
        {
            ShowMessage("Error creating mod: " + ex.Message, "alert-danger");
        }
    }

    private void ShowMessage(string message, string alertClass)
    {
        alertMessage = message;
        this.alertClass = alertClass;
        showMessageContainer = true;
    }

    public class ModFormModel
    {
        public Guid ModId { get; set; }
        public string Name { get; set; }
        public string Game { get; set; }
        public string Description { get; set; }
        public DateTime ReleaseDate { get; set; }
        public string Author { get; set; }
        public string Version { get; set; }
        public string DownloadLink { get; set; }
        public int DownloadCount { get; set; }
        public int Rating { get; set; }
    }
}

<div class="container">
    <h1>Add New Mod</h1>
    @if (shouldRedirect)
    {
        <NavLink class="nav-link" href="@($"/add-tags/{createdModId}")">
            <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Adicionar Mod
        </NavLink>
    }
    <EditForm Model=@formData OnValidSubmit=@SubmitForm FormName="AddMod">
        <div class="mb-3">
            <label for="modName" class="form-label">Mod Name</label>
            <InputText id="modName" class="form-control" placeholder="Mod Name" aria-label="Mod Name" aria-describedby="modName" @bind-Value=formData.Name @bind-Value:event="oninput" />
        </div>
        <div class="mb-3">
            <label for="gameName" class="form-label">Game Name</label>
            <InputText id="gameName" class="form-control" placeholder="Game Name" aria-label="Game Name" aria-describedby="gameName" @bind-Value=formData.Game @bind-Value:event="oninput" />
        </div>
        <div class="mb-3">
            <label for="description" class="form-label">Description</label>
            <InputTextArea id="description" class="form-control" placeholder="Description" aria-label="Description" aria-describedby="description" @bind-Value=formData.Description @bind-Value:event="oninput" />
        </div>
        <div class="mb-3">
            <label for="authorName" class="form-label">Author Name</label>
            <InputText id="authorName" class="form-control" placeholder="Author Name" aria-label="Author Name" aria-describedby="authorName" @bind-Value=formData.Author @bind-Value:event="oninput" />
        </div>
        <div class="mb-3">
            <label for="version" class="form-label">Version</label>
            <InputText id="version" class="form-control" placeholder="Version" aria-label="Version" aria-describedby="version" @bind-Value=formData.Version @bind-Value:event="oninput" />
        </div>
        <div class="mb-3">
            <label for="downloadLink" class="form-label">Download Link</label>
            <InputText id="downloadLink" class="form-control" placeholder="Download Link" aria-label="Download Link" aria-describedby="downloadLink" @bind-Value=formData.DownloadLink @bind-Value:event="oninput" />
        </div>
        <div class="mb-3 text-end">
            <button type="submit" class="btn btn-primary">Create</button>
        </div>
    </EditForm>

    @if (showMessageContainer)
    {
        <div id="messageContainer" class="m-2">
            <div id="alertBox" class="alert @alertClass">@alertMessage</div>
        </div>
    }
</div>
