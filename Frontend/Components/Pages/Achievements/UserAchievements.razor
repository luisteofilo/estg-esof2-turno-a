@page "/user-achievements"
@using Frontend.Helpers
@using global::Helpers.Models
@attribute [StreamRendering]
@inject ApiHelper ApiHelper
@rendermode InteractiveServer

<PageTitle>My Achievements</PageTitle>

<h1>Achievements list</h1>

@if (_user_achievements == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var achievements in _user_achievements.GroupBy(a => a.Name))
        {
            @foreach (var achievement in achievements.OrderBy(x => x))
            {
                <tr>
                    <td>@achievement.Name</td>
                    <td>@achievement.Description</td>
                </tr>
            }
        }
        </tbody>
    </table>
}

@code
{
    private string apiUrl = $"/achievements/5cc030f2-377f-475b-a4fa-fd20cfa46ff1";
    private PlayerAchievementsViewModel[]? _user_achievements;
    
    //Muito importante como não foi possivel fazer a autenticação foi festa o pedido do id do utilizador atraves de uma variavel estatica
    Guid teste = new Guid("1cd94aba-997a-490a-ac21-b1ea2cd2f6a4");
    protected override async Task OnInitializedAsync()
    {
        _user_achievements = await ApiHelper.GetFromApiAsync<PlayerAchievementsViewModel[]>($"/user_achievements/{teste}");
    }
}
