@page "/marketplace/listing/{id:guid}"
@using Frontend.Helpers
@inject ApiHelper ApiHelper
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
<PageTitle>Listing</PageTitle>

@if (game == null)
{
    <p>Loading...</p>
}
else
{
    <div class="main">
        <div class="info">
            <div class="fw-bold fs-1">@game.Name</div>
            <div class="listing-info-row">
                <div class="fw-bold fs-5">Description:</div>
                <div class="fs-5">@game.Description</div>
            </div>
            <div class="listing-info-col">
                <div>Price</div>
                <div class="fw-bold fs-3">@game.Price â‚¬</div>
            </div>
            <div class="listing-info-row">
                <div class="fw-bold fs-5">Genres:</div>
                <div class="fs-5">
                    @if (game.Genres != null && game.Genres.Any())
                    {
                        @foreach (var genre in game.Genres)
                        {
                            <span>@genre.Name</span>
                            @if (genre != game.Genres.Last()) { <span>, </span> }
                        }
                    }
                    else
                    {
                        <span>No genres found</span>
                    }
                </div>
            </div>
            <div class="actions">
                <div class="listing-info-row">
                    <button type="button" class="btn btn-outline-primary">Add to cart</button>
                    <button type="button" class="btn btn-primary" @onclick="BuyNow">Buy now</button>
                    <button type="button" class="btn btn-warning" @onclick="SellNow">Sell now</button>
                </div>
                <a href="/marketplace/" type="button" class="btn btn-outline-secondary">Go back</a>
            </div>
            @if (!string.IsNullOrEmpty(successMessage))
            {
                <div class="alert alert-success mt-3">@successMessage</div>
            }
        </div>
        <div class="slideshow">
            <img src="https://picsum.photos/600/400" alt="">
        </div>
    </div>
}

@code {
    [Parameter]
    public Guid? Id { get; set; }

    private ResponseMKP_GameDto game;
    private string successMessage;

    protected override async Task OnParametersSetAsync()
    {
        if (Id != null)
        {
            game = await ApiHelper.GetFromApiAsync<ResponseMKP_GameDto>($"marketplace/game/{Id}");
        }
    }

    private async Task BuyNow()
    {
        if (Id != null)
        {
            var response = await ApiHelper.PostToApiAsync<object>($"marketplace/game/{Id}/buy");
            if (response != null)
            {
                successMessage = "Buy action completed successfully!";
            }
            else
            {
                successMessage = "Error performing buy action.";
            }
        }
    }

    private async Task SellNow()
    {
        if (Id != null)
        {
            var response = await ApiHelper.PostToApiAsync<object>($"marketplace/game/{Id}/sell");
            if (response != null)
            {
                successMessage = "Sell action completed successfully!";
            }
            else
            {
                successMessage = "Error performing sell action.";
            }
        }
    }

    public class ResponseMKP_GameDto
    {
        public Guid Id { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public decimal Price { get; set; }
        public List<GenreDto> Genres { get; set; }
    }

    public class GenreDto
    {
        public string Name { get; set; }
    }
}
