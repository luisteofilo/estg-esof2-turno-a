@page "/catalog"
@using Frontend.Helpers
@using ESOF.WebApp.DBLayer.Entities
@attribute [StreamRendering]
@inject ApiHelper ApiHelper
@rendermode InteractiveServer

<PageTitle>Games catalog</PageTitle>
<div class="mb-5">
    <h1>Games catalog</h1>
</div>

@if (_gamesCatalog == null)
{
    <p class="col-md-10 offset-md-1 mb-5">
        <em>Loading games...</em>
    </p>
}
else
{
    <div class="row">
        <div class="col-10">
            <div class="row justify-content-between align-items-center">
                <ul class="nav col-8 nav-underline mb-3" id="myTab" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="home-tab" data-bs-toggle="tab" data-bs-target="#home-tab-pane" type="button" role="tab" aria-controls="home-tab-pane" aria-selected="true">Games</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="fav-tab" data-bs-toggle="tab" data-bs-target="#fav-tab-pane" type="button" role="tab" aria-controls="fav-tab-pane" aria-selected="false">Favorites</button>
                    </li>
                </ul>
                <div class="col-4">
                    <div class="input-group mb-3">
                        <span class="input-group-text" id="basic-addon1">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="-2.5 -2.5 24 24" width="28" fill="currentColor">
                                <path d="M8 14A6 6 0 1 0 8 2a6 6 0 0 0 0 12zm6.32-1.094l3.58 3.58a1 1 0 1 1-1.415 1.413l-3.58-3.58a8 8 0 1 1 1.414-1.414z"></path>
                            </svg>
                        </span>
                        <input type="text" class="form-control" placeholder="Search" aria-label="Search" aria-describedby="basic-addon1">
                    </div>
                </div>
            </div>
            <div class="tab-content" id="myTabContent">
                <div class="tab-pane fade show active" id="home-tab-pane" role="tabpanel" aria-labelledby="home-tab" tabindex="0">
                    <div class="cardsGames row">
                        @foreach (var game in _gamesCatalog)
                        {
                            <div class="col-md-3 mb-4">
                                <div class="card position-relative">
                                    <img src="https://picsum.photos/500/700" class="card-img" alt="...">
                                    <div class="card-img-overlay d-flex flex-column justify-content-end">
                                        <h5 class="card-title text-white mb-0">@game.Name</h5>
                                        <p class="card-text text-white">@game.Genre - @game.Platform</p>
                                    </div>
                                    <div class="card-button">
                                        <button type="button" class="btn btn-outline-light" @onclick="() => ToggleFavorite(game)">
                                            @if (IsFavorite(game))
                                            {
                                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="-2 -2 24 24" width="24" fill="currentColor">
                                                    <path d="M10 16.207l-6.173 3.246 1.179-6.874L.01 7.71l6.902-1.003L10 .453l3.087 6.254 6.902 1.003-4.995 4.869 1.18 6.874z"></path>
                                                </svg>
                                            }
                                            else
                                            {
                                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" fill="currentColor">
                                                    <path d="M6.516 14.323l-1.49 6.452a.998.998 0 0 0 1.529 1.057L12 18.202l5.445 3.63a1.001 1.001 0 0 0 1.517-1.106l-1.829-6.4 4.536-4.082a1 1 0 0 0-.59-1.74l-5.701-.454-2.467-5.461a.998.998 0 0 0-1.822 0L8.622 8.05l-5.701.453a1 1 0 0 0-.619 1.713l4.214 4.107zm2.853-4.326a.998.998 0 0 0 .832-.586L12 5.43l1.799 3.981a.998.998 0 0 0 .832.586l3.972.315-3.271 2.944c-.284.256-.397.65-.293 1.018l1.253 4.385-3.736-2.491a.995.995 0 0 0-1.109 0l-3.904 2.603 1.05-4.546a1 1 0 0 0-.276-.94l-3.038-2.962 4.09-.326z"></path>
                                                </svg>
                                            }
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="tab-pane fade" id="fav-tab-pane" role="tabpanel" aria-labelledby="fav-tab" tabindex="0">
                    <div class="cardsGames row">
                        @if (_gamesFavoritesById != null)
                        {
                            @foreach (var fav in _gamesFavoritesById)
                            {
                                <div class="col-md-3 mb-4">
                                    <div class="card position-relative">
                                        <img src="https://picsum.photos/500/700" class="card-img" alt="...">
                                        <div class="card-img-overlay d-flex flex-column justify-content-end">
                                            <h5 class="card-title text-white mb-0">@fav.Name</h5>
                                            <p class="card-text text-white">@fav.Genre - @fav.Platform</p>
                                        </div>
                                        <div class="card-button">
                                            <button type="button" class="btn btn-outline-light" @onclick="() => ToggleFavorite(fav)">
                                                @if (IsFavorite(fav))
                                                {
                                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="-2 -2 24 24" width="24" fill="currentColor">
                                                        <path d="M10 16.207l-6.173 3.246 1.179-6.874L.01 7.71l6.902-1.003L10 .453l3.087 6.254 6.902 1.003-4.995 4.869 1.18 6.874z"></path>
                                                    </svg>
                                                }
                                                else
                                                {
                                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" fill="currentColor">
                                                        <path d="M6.516 14.323l-1.49 6.452a.998.998 0 0 0 1.529 1.057L12 18.202l5.445 3.63a1.001 1.001 0 0 0 1.517-1.106l-1.829-6.4 4.536-4.082a1 1 0 0 0-.59-1.74l-5.701-.454-2.467-5.461a.998.998 0 0 0-1.822 0L8.622 8.05l-5.701.453a1 1 0 0 0-.619 1.713l4.214 4.107zm2.853-4.326a.998.998 0 0 0 .832-.586L12 5.43l1.799 3.981a.998.998 0 0 0 .832.586l3.972.315-3.271 2.944c-.284.256-.397.65-.293 1.018l1.253 4.385-3.736-2.491a.995.995 0 0 0-1.109 0l-3.904 2.603 1.05-4.546a1 1 0 0 0-.276-.94l-3.038-2.962 4.09-.326z"></path>
                                                    </svg>
                                                }
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p>No favorites selected.</p>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-2">
            <div class="menuFilters mb-5">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="m-0">Filters</h5>
                    <button type="button" class="btn btn-danger">Clear
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="-6 -6 24 24" width="17" fill="currentColor">
                            <path d="M7.314 5.9l3.535-3.536A1 1 0 1 0 9.435.95L5.899 4.485 2.364.95A1 1 0 1 0 .95 2.364l3.535 3.535L.95 9.435a1 1 0 1 0 1.414 1.414l3.535-3.535 3.536 3.535a1 1 0 1 0 1.414-1.414L7.314 5.899z"></path>
                        </svg>
                    </button>
                </div>
                <button type="button" class="btn btn-primary">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="-8 -5 24 24" width="28" fill="currentColor">
                        <path d="M5.314 7.071l-4.95-4.95A1 1 0 0 1 1.778.707l5.657 5.657a1 1 0 0 1 0 1.414l-5.657 5.657a1 1 0 0 1-1.414-1.414l4.95-4.95z"></path>
                    </svg> Genre
                </button>
                <button type="button" class="btn btn-primary">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="-8 -5 24 24" width="28" fill="currentColor">
                        <path d="M5.314 7.071l-4.95-4.95A1 1 0 0 1 1.778.707l5.657 5.657a1 1 0 0 1 0 1.414l-5.657 5.657a1 1 0 0 1-1.414-1.414l4.95-4.95z"></path>
                    </svg> Console
                </button>
            </div>
        </div>
    </div>
}

@code {
    private List<Game>? _gamesCatalog;
    private List<Game> _gamesFavorites = new List<Game>();
    private List<Game>? _gamesFavoritesById;
    private Guid userId = Guid.Parse("4b7970ba-b06a-40d9-a440-4c40704dab23");

    protected override async Task OnInitializedAsync()
    {
        _gamesCatalog = await ApiHelper.GetFromApiAsync<List<Game>>("games");
        
        if (_gamesCatalog != null)
        {
            _gamesFavorites = await ApiHelper.GetFromApiAsync<List<Game>>($"favorites/{userId}");
            _gamesFavoritesById = _gamesCatalog.Where(game => _gamesFavorites.Any(fav => fav.GameId == game.GameId)).ToList();
        }
    }

    private async Task AddToFavorites(Guid gameId)
    {
        Console.WriteLine("Add to favorites");
        string addFavoritesUrl = $"favorites/{userId}/{gameId}";
        var favorite = await ApiHelper.PostToApiAsync<Favorite>(addFavoritesUrl);
    
        if (favorite != null)
        {
            var game = _gamesCatalog?.FirstOrDefault(g => g.GameId == gameId);
            if (game != null)
            {
                _gamesFavorites.Add(game);
                UpdateFavoritesById();
            }
        }
    }

    private async Task RemoveFromFavorites(Guid gameId)
    {
        Console.WriteLine("Remove from favorites");
        string removeFavoritesUrl = $"favorites/{userId}/{gameId}";
        await ApiHelper.DeleteFromApiAsync<List<Game>>(removeFavoritesUrl);
    
        var game = _gamesFavorites.FirstOrDefault(g => g.GameId == gameId);
        if (game != null)
        {
            _gamesFavorites.Remove(game);
            UpdateFavoritesById();
        }
    }

    private void UpdateFavoritesById()
    {
        _gamesFavoritesById = _gamesCatalog.Where(game => _gamesFavorites.Any(fav => fav.GameId == game.GameId)).ToList();
    }

    private bool IsFavorite(Game game)
    {
        return _gamesFavorites.Any(fav => fav.GameId == game.GameId);
    }

    private async Task ToggleFavorite(Game game)
    {
        Console.WriteLine("Toggle favorite");
        if (IsFavorite(game))
        {
            await RemoveFromFavorites(game.GameId);
            Console.WriteLine("Removed from favorites.");
        }
        else
        {
            await AddToFavorites(game.GameId);
            Console.WriteLine("Added to favorites.");
        }
    }
}
